df_tmp$psych_date <- as.Date(date_str, "%Y%m%d")
## concatenate with other files
response_df <- rbind(response_df, df_tmp)
} else {
print(paste("skipping", fname, "(incomplete block)"))
}
}
options(opts)  # restore default options
# Change the column names to what is required for HDDM
colnames(response_df) <- c("subj_idx", "trial", "stim", "direction","response", "rt","psych_date")
# Scale the coherence levels so they are in tens, not decimals, for ease of reading
response_df$stim <- 100*response_df$stim
# EXCLUDE subjects whose performance is just not sufficient
# Exclude subjects if they are not getting more than 70% correct at 100% coherence
excl_list <- response_df %>% group_by(stim, subj_idx) %>%
summarise(mean_response = mean(response)) %>%
filter(stim == 100) %>%
filter(mean_response < 0.7)
response_df <- filter(response_df, !(subj_idx %in% excl_list$subj_idx ))
# Make sure all the subject names use capital letters and are properly named
response_df = as.data.frame(sapply(response_df, toupper))
response_df$subj_idx <- gsub("GB240", "HB240",response_df$subj_idx )
response_df$subj_idx <- gsub("GB241", "KB241",response_df$subj_idx )
# Load in biographical data
repository_df <- read.csv("../RDRPRepository_DATA_2018-04-02_1648.csv")
registry_df <- read.csv("../RDRPRegistry_DATA_2018-04-02_1647.csv")
demog_df <- merge(repository_df, registry_df, by = "record_id")
# Filter any subjects not in our study
record_ids <- demog_df %>% filter(sid.x %in% response_df$subj_idx) %>% select(record_id)
subject_df <- demog_df %>% filter(record_id %in% record_ids$record_id)
## get reading scores
names <- colnames(demog_df)
wj_cols <- c("wj_brs","wj_wa_ss","wj_lwid_ss")
ctopp_cols <- c("ctopp_pa","ctopp_rapid","ctopp_pm")
twre_cols <- c("twre_index","twre_pde_ss","twre_swe_ss")
wasi_cols <- c("wasi_fs2", "wasi_mr_ts")
reading_columns <- c("record_id", "dys_dx", "adhd_dx", "brain_injury", "aud_dis",
"psych_dx", wj_cols, ctopp_cols, twre_cols, wasi_cols)
reading_df <- subject_df %>% select(reading_columns)
reading_df <- reading_df[!duplicated(reading_df),]
#colnames(reading_df)[colnames(reading_df) == "sid.x"] <- "subj_idx"
## combine scores from distinct sessions
reading_df <- reading_df %>% group_by(record_id) %>%
summarise_all(funs(mean(as.numeric(.), na.rm=TRUE)))
## biographic details
bio_df <- subject_df[c("sid.x", "dob", "record_id")]
bio_df[bio_df==""] <- NA
bio_df <- na.omit(bio_df)
bio_df$dob <- as.POSIXct(bio_df$dob, format="%Y-%m-%d")
colnames(bio_df)[colnames(bio_df) == "sid.x"] <- "subj_idx"
## merge biographic info, reading scores, and psychometric data
use_df <- merge(bio_df, response_df)
use_df <- merge(use_df, reading_df, by = "record_id")
## compute age at testing
use_df$age_at_testing <- with(use_df, difftime(psych_date, dob, units="weeks"))
use_df$age_at_testing <- as.numeric(use_df$age_at_testing) / 52.25
use_df <- use_df %>%
#filter(psych_date >= "2017-08-15") %>%  # date the exp. was finalized
filter(age_at_testing >= 8) %>%         # min. age
filter(age_at_testing < 13) %>%         # max. age
filter(aud_dis == 0) %>%                # no auditory disorder
filter(wasi_fs2 >= 80)           # WASI criterion
use_df$group <- with(use_df, ifelse(wj_brs <= 85 & twre_index <= 85, "Dyslexic",
ifelse(wj_brs >= 100 & twre_index >= 100, "Above Average",
"Below Average")))
write.csv(use_df, "./Exp/Data/Processed/Clean_Motion_Data.csv", row.names = FALSE)
########################## Make HDDM clean dataset ####################################
params <- read.csv("./Exp/Data/Processed/HDDM_Fit_Reg.csv")
vars <- colsplit(params$X, '\\.', names = c("Parameter", "Subject"))
params$X <- vars$Parameter
params$subj_idx <- vars$Subject
colnames(params)[1] <- "parameter"
# Split numbers where they occur
# Remove any parameters that are not subject-specific
#detach("package:plyr", unload=TRUE)
params <- params %>%
filter(subj_idx != "") %>%
select(c("parameter", "mean",  "subj_idx"))
params <- mutate(params, class = ifelse(grepl("v_Int",parameter), "v_Int",
ifelse(grepl("sv", parameter), "sv",
ifelse(grepl("sz", parameter), "sz",
ifelse(grepl("v_stim", parameter), "v_stim",
ifelse(grepl("t", parameter), "t",
ifelse(grepl("a", parameter), "a", "other")))))))
params$parameter <-  gsub("[^0-9\\.]", "", params$parameter)
params$level <- as.numeric(params$parameter)
params$parameter <- params$class
params$class <- NULL
# To wideform
params <- spread(params, parameter, mean)
params$level <- NULL
# Now merge with biographical data
columns <- c("subj_idx", "group", "wj_brs", "adhd_dx", "wasi_mr_ts","age_at_testing")
group_table <- unique(use_df[columns])
param_df <- merge(params, group_table, all.x=TRUE, all.y=FALSE)
## omit subjects missing from clean_data (must have been excluded earlier)
param_df <- na.omit(param_df)
write.csv(param_df, "./Exp/Data/Processed/Clean_DDF.csv", row.names = FALSE)
params <- read.csv("../Exp/Data/Processed/Clean_DDF.csv")
params$adhd_dx <- as.logical(params$adhd_dx)
setwd("~/bde/Projects/Parametric/Motion/Analysis")
params <- read.csv("../Exp/Data/Processed/Clean_DDF.csv")
params$adhd_dx <- as.logical(params$adhd_dx)
params$wj_brs <- scale(params$wj_brs, scale=FALSE)
params$wasi_mr_ts <- scale(params$wasi_mr_ts, scale=FALSE)
lmfit <- lm(v_stim ~  wj_brs, params )
summary(lmfit)
lmfit <- lm(v_stim ~  wj_brs, params )
summary(lmfit)
lmfit <- lm(v_int ~  wj_brs, params )
summary(lmfit)
lmfit <- lm(v_int ~  wj_brs, params )
lmfit <- lm(v_Int ~  wj_brs, params )
summary(lmfit)
lmfit <- lm(t ~  wj_brs, params )
summary(lmfit)
lmfit <- lm(v_stim ~  wasi_mr_ts, params )
summary(lmfit)
lmfit <- lm(v_stim ~  wasi_mr_ts+wj_brs, params )
summary(lmfit)
ggplot(params, aes(wasi_mr_ts, v_stim))+
geom_point()+
geom_smooth(method=lm)
ggplot(params, aes(wj_brs, v_stim))+
geom_point()+
geom_smooth(method=lm)
lmfit <- lm(v_Int ~  wj_brs, params )
summary(lmfit)
lmfit <- lm(v_Int ~  wasi_mr_ts, params )
summary(lmfit)
lmfit <- lm(v_stim ~  wasi_mr_ts+wj_brs, params )
summary(lmfit)
lmfit <- lm(v_stim ~  wasi_mr_ts+wj_brs, subset(params, wj_brs > -25) )
summary(lmfit)
lmfit <- lm(v_stim ~  wasi_mr_ts, subset(params, wj_brs > -25) )
summary(lmfit)
lmfit <- lm(v_stim ~  wj_brs, subset(params, wj_brs > -25) )
summary(lmfit)
lmfit <- lm(v_stim ~  wj_brs+age_at_testing, subset(params, wj_brs > -25) )
summary(lmfit)
lmfit <- lm(v_stim ~  wj_brs+age_at_testing, params)
summary(lmfit)
lmfit <- lm(v_stim ~  wj_brs, params)
summary(lmfit)
lmfit <- lm(v_Int ~  wasi_mr_ts, params )
summary(lmfit)
lmfit <- lm(t ~  wj_brs, params )
summary(lmfit)
lmfit <- lm(sv ~  wj_brs, params )
summary(lmfit)
lmfit <- lm(sv ~  wasi_mr_ts, params )
summary(lmfit)
wasi_mr_ts
lmfit <- lm(sz ~  wasi_mr_ts, params )
summary(lmfit)
lmfit <- lm(sz ~  wj_brs, params )
summary(lmfit)
hist(log10(params$wj_brs))
hist(log10(params$wj_brs, na.rm = TRUE))
log10(params$wj_brs)
params$wj_brs <- log(params$wj_brs)
class(params$wj_brs)
params <- read.csv("../Exp/Data/Processed/Clean_DDF.csv")
hist(log10(params$wj_brs))
params$wj_brs <- log10(params$wj_brs)
params$adhd_dx <- as.logical(params$adhd_dx)
params$wj_brs <- scale(params$wj_brs, scale=FALSE)
params$wasi_mr_ts <- scale(params$wasi_mr_ts, scale=FALSE)
params$wj_brs <- log(params$wj_brs)
lmfit <- lm(v_stim ~  wj_brs, params)
summary(lmfit)
library(dplyr)
library(lme4)
df<- read.csv("../cleaned_psychometrics.csv", stringsAsFactors=FALSE)
setwd("~/bde/Projects/Parametric/Speech/Analysis/Figures")
df<- read.csv("../cleaned_psychometrics.csv", stringsAsFactors=FALSE)
setwd("~/bde/Projects/Parametric/Speech/Analysis")
df<- read.csv("../cleaned_psychometrics.csv", stringsAsFactors=FALSE)
View(df)
psychometrics <- read.csv("../cleaned_psychometrics.csv")
psychometrics$paradigm <- factor(psychometrics$paradigm, levels=c("Single", "ABX"))
psychometrics$duration<- factor(psychometrics$paradigm, levels=c("100", "300"))
View(psychometrics)
psychometrics$duration<- factor(psychometrics$paradigm, levels=c("100", "300"))
psychometrics$duration<- factor(psychometrics$duration, levels=c("100", "300"))
paradigm_dimnames <- list(levels(psychometrics$duration),
levels(psychometrics$duration)[2])
psychometrics$duration<- factor(psychometrics$duration, levels=c("100", "300"))
duration_dimnames <- list(levels(psychometrics$duration),
levels(psychometrics$duration)[2])
contrasts(psychometrics$duration) <- matrix(c(-0.5, 0.5), nrow=2, dimnames=duration_dimnames)
psychometrics$adhd_dx <- as.logical(psychometrics$adhd_dx)
psychometrics$wj_brs <- scale(psychometrics$wj_brs, scale=FALSE)
psychometrics$wasi_mr_ts <- scale(psychometrics$wasi_mr_ts, scale=FALSE)
full_model <- lmer(slope ~ wj_brs*duration + adhd_dx + wasi_mr_ts + (1|subject_id),
data=psychometrics)
coefs <- data.frame(coef(summary(full_model)))
df.KR <- get_ddf_Lb(full_model, fixef(full_model))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
print(coefs)
no_wasi_model <- update(full_model, ~ . - wasi_mr_ts)
anova(full_model, no_wasi_model)
no_adhd_model <- update(full_model, ~ . - adhd_dx)
anova(full_model, no_adhd_model)
no_nuisance_model <- update(full_model, ~ . - wasi_mr_ts - adhd_dx)
anova(full_model, no_nuisance_model)
no_duration_model <- lmer(slope ~ wj_brs+ (1|subject_id), data=psychometrics)
anova(no_nuisance_model, no_duration_model)
no_wj_model <- lmer(slope ~ duration+ (1|subject_id), data=psychometrics)
anova(no_nuisance_model, no_wj_model
anova(no_nuisance_model, no_wj_model)
anova(no_nuisance_model, no_wj_model)
no_wj_model <- lmer(slope ~ duration+ (1|subject_id), data=psychometrics)
anova(no_nuisance_model, no_wj_model)
no_int_model <- lmer(slope ~ duration + wj_brs + (1|subject_id), data = psychometrics)
anova(no_nuisance_model, no_int_model)
ggplot(psychometrics, aes(wj_brs, slope))+
geom_point()+
geom_smooth(method = lm)+
facet_wrap(.~duration)
ggplot(psychometrics, aes(wj_brs, slope))+
geom_point()+
geom_smooth(method = lm)+
facet_wrap(~duration)
no_duration_model <- lmer(slope ~ wj_brs + (1|subject_id), data=psychometrics)
anova(no_nuisance_model, no_duration_model)
no_wj_model <- lmer(slope ~ duration+ (1|subject_id), data=psychometrics)
anova(no_nuisance_model, no_wj_model)
win_model <- no_duration_model
coefs <- data.frame(coef(summary(win_model)))
df.KR <- get_ddf_Lb(win_model, fixef(win_model))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
print(coefs)
win_model <- no_nuisance_model
coefs <- data.frame(coef(summary(win_model)))
df.KR <- get_ddf_Lb(win_model, fixef(win_model))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
print(coefs)
win_model <- no_wj_model
coefs <- data.frame(coef(summary(win_model)))
df.KR <- get_ddf_Lb(win_model, fixef(win_model))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
print(coefs)
int_model <- lmer(slope ~ duration:wj_brs + (1|subject_id), data = psychometrics)
anova(no_nuisance_model, int_model)
win_model <- int_model
coefs <- data.frame(coef(summary(win_model)))
df.KR <- get_ddf_Lb(win_model, fixef(win_model))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
print(coefs)
win_model <- no_nuisance_model
coefs <- data.frame(coef(summary(win_model)))
df.KR <- get_ddf_Lb(win_model, fixef(win_model))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
print(coefs)
psychometrics$lapse_rate <- with(psychometrics, (lo_asymp + hi_asymp) / 2)
full_model <- lmer(lapse_rate ~ wj_brs*duration + adhd_dx + wasi_mr_ts + (1|subject_id),
data=psychometrics)
coefs <- data.frame(coef(summary(full_model)))
df.KR <- get_ddf_Lb(full_model, fixef(full_model))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
print(coefs)
no_wasi_model <- update(full_model, ~ . - wasi_mr_ts)
anova(full_model, no_wasi_model) # OK to remove wasi
no_adhd_model <- update(full_model, ~ . - adhd_dx)
anova(full_model, no_adhd_model) # OK to remove adhd
no_nuisance_model <- update(full_model, ~ . - wasi_mr_ts - adhd_dx)
anova(full_model, no_nuisance_model) # OK to remove both nuisance parameters
no_duration_model <- lmer(lapse_rate ~ wj_brs + (1|subject_id), data=psychometrics)
anova(no_nuisance_model, no_duration_model)
no_wj_model <- lmer(lapse_rate ~ duration+ (1|subject_id), data=psychometrics)
anova(no_nuisance_model, no_wj_model)
win_model <- no_duration_model
coefs <- data.frame(coef(summary(win_model)))
df.KR <- get_ddf_Lb(win_model, fixef(win_model))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
print(coefs)
ggplot(psychometrics, aes(wj_brs, lapse_rate))+
geom_point()+
geom_smooth(method = lm)+
facet_wrap(~duration)
psychometrics <- read.csv("../cleaned_psychometrics.csv")
View(psychometrics)
psychometrics <- plyr::rename(psychometrics, c("lo_asymp"="guess", "hi_asymp"="lapse"))
View(psychometrics)
params <- psychometrics[,5:7]
PCA<- prcomp(params, scale=TRUE)
psychometrics <- cbind(psychometrics, PCA$x)
summary(PCA)
PCA
psychometrics$duration <- factor(psychometrics$duration, levels=c("100", "300"))
contrasts(psychometrics$duration) <- matrix(c(-0.5, 0.5), nrow=2,
dimnames=list(levels(psychometrics$duration), "ABX"))
psychometrics$adhd_dx <- as.logical(psychometrics$adhd_dx)
psychometrics$wj_brs <- scale(psychometrics$wj_brs, scale=FALSE)
psychometrics$wasi_mr_ts <- scale(psychometrics$wasi_mr_ts, scale=FALSE)
library(lme4)
lmfit <- lmer(PC1 ~ wj_brs*contrast*duration + adhd_dx + wasi_mr_ts + (1|subject_id), psychometrics)
lmfit <- lmer(PC1 ~ wj_brs*duration + adhd_dx + wasi_mr_ts + (1|subject_id), psychometrics)
coefs <- data.frame(coef(summary(lmfit)))
df.KR <- get_ddf_Lb(lmfit, fixef(lmfit))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
print(coefs)
contrasts(psychometrics$duration) <- matrix(c(-0.5, 0.5), nrow=2,
dimnames=list(levels(psychometrics$duration), "100"))
psychometrics$adhd_dx <- as.logical(psychometrics$adhd_dx)
psychometrics$wj_brs <- scale(psychometrics$wj_brs, scale=FALSE)
psychometrics$wasi_mr_ts <- scale(psychometrics$wasi_mr_ts, scale=FALSE)
library(lme4)
lmfit <- lmer(PC1 ~ wj_brs*duration + adhd_dx + wasi_mr_ts + (1|subject_id), psychometrics)
coefs <- data.frame(coef(summary(lmfit)))
df.KR <- get_ddf_Lb(lmfit, fixef(lmfit))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
print(coefs)
lmfit_no_wasi <- update(lmfit, ~ . - wasi_mr_ts)
anova(lmfit, lmfit_no_wasi)
lmfit_no_adhd <- update(lmfit, ~ . - adhd_dx)
anova(lmfit, lmfit_no_adhd)
lmfit_no_nuisance <- update(lmfit, ~ . - wasi_mr_ts - adhd_dx)
anova(lmfit, lmfit_no_nuisance) # OK to remove both nuisances!
coefs <- data.frame(coef(summary(lmfit_no_nuisance)))
df.KR <- get_ddf_Lb(lmfit_no_nuisance, fixef(lmfit_no_nuisance))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
print(coefs)
lmfit_no_duration <- lmer(PC1 ~ wj_brs + wj_brs:duration + (1|subject_id), data=psychometrics)
anova(lmfit_no_nuisance, lmfit_no_duration) #can't remove duration
lmfit_no_int <- lmer(PC1 ~ wj_brs + (1|subject_id), data=psychometrics)
anova(lmfit_no_nuisance, lmfit_no_int) #can remove main effect of duration
win <- lmfit_no_int
coefs <- data.frame(coef(summary(win)))
df.KR <- get_ddf_Lb(win, fixef(win))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
print(coefs)
rm(list =ls())
library(dplyr)
library(ggplot2)
library(lme4)
library(pbkrtest)
library(coefplot2)
df <- read.csv("cleaned_data.csv")
install.packages("coefplot2")
install.packages(c("coda", "reshape"))
nstall.packages("coefplot2", repos="http://www.math.mcmaster.ca/bolker/R", type="source")
install.packages("coefplot2", repos="http://www.math.mcmaster.ca/bolker/R", type="source")
library(dplyr)
library(ggplot2)
library(lme4)
library(pbkrtest)
library(coefplot2)
df <- read.csv("cleaned_data.csv")
getwd()
setwd("..")
df <- read.csv("cleaned_data.csv")
df$group <- factor(df$group,
levels=c("Dyslexic", "Below Average", "Above Average"))
lo_cutoff <- 0.2
hi_cutoff <- 2.0
df %>% filter(RT > lo_cutoff & RT < hi_cutoff) -> trunc_df
trunc_df %>% mutate(wj_brs=wj_brs - mean(wj_brs)) -> trunc_df
lmfit_raw <- lmer(RT ~ poly(step, 2) * wj_brs + (1|subject_id), trunc_df)
coefs_raw <- data.frame(coef(summary(lmfit_raw)))
coefs_raw
trunc_df %>% group_by(step, subject_id) %>%
summarise(RT=mean(RT, na.rm=TRUE), wj_brs=unique(wj_brs)) -> RT_mean
lmfit_mean <- lmer(RT ~ poly(step, 2) * wj_brs + (1|subject_id), RT_mean)
coefs_mean <- data.frame(coef(summary(lmfit_mean)))
df.KR <- get_ddf_Lb(lmfit_mean, fixef(lmfit_mean))
coefs_mean$p.KR <- 2*(1 - pt(abs(coefs_mean$t.value), df.KR))
trunc_df %>% group_by(step, subject_id) %>%
summarise(RT=median(RT, na.rm=TRUE), wj_brs=unique(wj_brs)) -> RT_med
lmfit_med <- lmer(RT ~ poly(step, 2) * wj_brs + (1|subject_id), RT_med)
coefs_med <- data.frame(coef(summary(lmfit_med)))
df.KR <- get_ddf_Lb(lmfit_med, fixef(lmfit_med))
coefs_med$p.KR <- 2*(1 - pt(abs(coefs_med$t.value), df.KR))
est_chsq_params <- function(x) {
## fit a chisq distribution against the empirical density
start <- c(df=3, ncp=2, xscale=1, yscale=1)
lower <- c(df=1, ncp=0, xscale=0.001, yscale=0.001)
fxn <- function(args) {
dens <- density(x)
chsq <- args["yscale"] * dchisq(x=(dens$x * args["xscale"]),
df=args["df"], ncp=args["ncp"])
sqdiff <- (dens$y - chsq)^2
if (!is.finite(sum(sqdiff))) print(args)  # debugging
sum(sqdiff)
}
result <- optim(start, fxn, lower=lower, method="L-BFGS-B")
}
chsq_peak <- function(x, na.rm=FALSE) {
if (na.rm) x <- na.omit(x)
# estimate parameters
result <- est_chsq_params(x)
# generate fitted distribution
xx <- seq(0, 2, 0.01)
fitted_chsq <- result$par["yscale"] * dchisq(xx * result$par["xscale"],
df=result$par["df"],
ncp=result$par["ncp"])
# extract peak
peak <- xx[which.max(fitted_chsq)]
}
x <- seq(0, 2, 0.01)
hist(trunc_df$RT, breaks=seq(0, 2, 0.05), freq=FALSE)
points(density(trunc_df$RT), col='red', type="l")
result <- est_chsq_params(trunc_df$RT)
curve(result$par["yscale"] * dchisq(x * result$par["xscale"],
df=result$par["df"], ncp=result$par["ncp"]),
col="blue", type="l", add=TRUE)
trunc_df %>% group_by(step, subject_id) %>%
summarise(RT=chsq_peak(RT, na.rm=TRUE), wj_brs=unique(wj_brs)) -> RT_chsq
lmfit_chsq <- lmer(RT ~ poly(step, 2) * wj_brs + (1|subject_id), RT_chsq)
coefs_chsq <- data.frame(coef(summary(lmfit_mean)))
df.KR <- get_ddf_Lb(lmfit_mean, fixef(lmfit_mean))
coefs_chsq$p.KR <- 2*(1 - pt(abs(coefs_chsq$t.value), df.KR))
coefplot2(lmfit_raw, col="black")
coefplot2(lmfit_med, col="blue", add=TRUE, merge.names=TRUE, offset=-0.05)
coefplot2(lmfit_raw, col="black")
coefplot2(lmfit_med, col="blue", add=TRUE, merge.names=TRUE, offset=-0.05)
coefplot2(lmfit_mean, col="red", add=TRUE, merge.names=TRUE, offset=-0.1)
coefplot2(lmfit_chsq, col="green", add=TRUE, merge.names=TRUE, offset=-0.15)
legend("topleft", c("raw", "median", "mean", "peak of chisq"),
col=c("black", "blue", "red", "green"), lwd=1, pch=16)
dev.off()
coefplot2(lmfit_raw, col="black")
coefplot2(lmfit_med, col="blue", add=TRUE, merge.names=TRUE, offset=-0.05)
coefplot2(lmfit_mean, col="red", add=TRUE, merge.names=TRUE, offset=-0.1)
coefplot2(lmfit_chsq, col="green", add=TRUE, merge.names=TRUE, offset=-0.15)
legend("topleft", c("raw", "median", "mean", "peak of chisq"),
col=c("black", "blue", "red", "green"), lwd=1, pch=16)
library(ggplot2)
library(dplyr)
library(stringr)
library(lme4)
library(dplyr)
library(pbkrtest)
use_df <- read.csv("./cleaned_data.csv")
endpts <- use_df %>%
#filter(str_detect(stimulus, "Ba")) %>%
subset(str_detect(stimulus,"1")| str_detect(stimulus,"7")) %>%
group_by(run_id, stimulus, trial, paradigm)
rm(list = ls())
getwd()
setwd("/home/eobrien/bde/Projects/Speech_contrasts_public/Analysis")
use_df <- read.csv("./cleaned_data.csv")
endpts <- use_df %>%
#filter(str_detect(stimulus, "Ba")) %>%
subset(str_detect(stimulus,"1")| str_detect(stimulus,"7")) %>%
group_by(run_id, stimulus, trial, paradigm)
setwd("..")
use_df <- read.csv("./cleaned_data.csv")
endpts <- use_df %>%
#filter(str_detect(stimulus, "Ba")) %>%
subset(str_detect(stimulus,"1")| str_detect(stimulus,"7")) %>%
group_by(run_id, stimulus, trial, paradigm)
endpts <- mutate(endpts, correct = ifelse(step == 1 & response == 0, "1",
ifelse( step == 7 & response == 1, "1", "0")))
endpts$correct <- as.numeric(endpts$correct)
endpts$paradigm <- factor(endpts$paradigm, levels=c("Single", "ABX"))
endpts$continuum <- factor(endpts$continuum,
levels=c("/ba/-/da/", "/ʃa/-/sa/"))
contrasts(endpts$paradigm) <- matrix(c(-0.5, 0.5), nrow=2,
dimnames=list(levels(endpts$paradigm), "ABX"))
contrasts(endpts$continuum) <- matrix(c(-0.5, 0.5), nrow=2,
dimnames=list(levels(endpts$continuum), "/ʃa/-/sa/"))
endpts$adhd_dx <- as.logical(endpts$adhd_dx)
endpts$wj_brs <- scale(endpts$wj_brs, scale=FALSE)
endpts$age <- scale(endpts$age_at_testing, scale=FALSE)
endpts$trial <- scale(endpts$trial, scale=FALSE)
lmfit <- lmer(correct ~ trial*wj_brs*paradigm*continuum + adhd_dx + age +  (1|subject_id), endpts)
summary(lmfit)
coefs <- data.frame(coef(summary(lmfit)))
df.KR <- get_ddf_Lb(lmfit, fixef(lmfit))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
coefs
lmfit <- lmer(correct ~ trial + wj_brs + paradigm + adhd_dx + age + (1|subject_id), endpts)
lmfit <- lmer(correct ~ trial*wj_brs*paradigm + (1|subject_id), endpts)
lmfit_no_adhd <- update(lmfit, ~ . - adhd_dx)
anova(lmfit, lmfit_no_adhd) #OK to remove adhd
lmfit_no_age <- update(lmfit, ~ . - age)
anova(lmfit, lmfit_no_age) #OK to remove age
lmfit_no_nuisance <- update(lmfit, ~ . - age -adhd_dx)
anova(lmfit, lmfit_no_nuisance) #OK to remove adhd and age
summary(lmfit_no_nuisance)
coefs <- data.frame(coef(summary(lmfit_no_nuisance)))
df.KR <- get_ddf_Lb(lmfit_no_nuisance, fixef(lmfit_no_nuisance))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
coefs
lmfit_no_paradigm <- lmer(correct ~ trial*wj_brs*continuum  +  (1|subject_id), endpts)
anova(lmfit_no_nuisance, lmfit_no_paradigm) # not OK to remove paradigm
lmfit_no_continuum <- lmer(correct ~ trial*wj_brs*paradigm  +  (1|subject_id), endpts)
anova(lmfit_no_nuisance, lmfit_no_paradigm) # not OK to remove paradigm
lmfit_no_paradigm <- lmer(correct ~ trial*wj_brs*continuum  +  (1|subject_id), endpts)
anova(lmfit_no_nuisance, lmfit_no_paradigm) # not OK to remove paradigm
lmfit_no_continuum <- lmer(correct ~ trial*wj_brs*paradigm  +  (1|subject_id), endpts)
anova(lmfit_no_nuisance, lmfit_no_continuum) # OK to remove continuum
summary(lmfit_no_continuum)
coefs <- data.frame(coef(summary(lmfit_no_continuum)))
df.KR <- get_ddf_Lb(lmfit_no_continuum, fixef(lmfit_no_continuum))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
coefs
lmfit_no_interaction_trialpara <- lmer(correct ~ trial + wj_brs + paradigm + wj_brs:trial+ wj_brs:paradigm + trial:paradigm:wj_brs + (1|subject_id), endpts)
anova(lmfit_no_continuum, lmfit_no_interaction_trialpara) #OK to remove paradigm:trial int
lmfit_no_interaction_three <- lmer(correct ~ trial + wj_brs + paradigm + wj_brs:trial+ wj_brs:paradigm + (1|subject_id), endpts)
anova(lmfit_no_interaction_trialpara, lmfit_no_interaction_three) #OK to remove paradigm:trial:wj interaction
lmfit_no_main_para <- lmer(correct ~ trial + wj_brs + wj_brs:trial+ wj_brs:paradigm + (1|subject_id), endpts)
anova(lmfit_no_interaction_three, lmfit_no_main_para) #OK to remove main effect of paradigm
lmfit_no_trialwj <- lmer(correct ~ trial + wj_brs +wj_brs:paradigm + (1|subject_id), endpts)
anova(lmfit_no_main_para, lmfit_no_trialwj) #OK to remove trial:wj
summary(lmfit_no_trialwj)
coefs <- data.frame(coef(summary(lmfit_no_trialwj)))
df.KR <- get_ddf_Lb(lmfit_no_trialwj, fixef(lmfit_no_trialwj))
coefs$p.KR <- 2*(1-pt(abs(coefs$t.value), df.KR))
coefs
